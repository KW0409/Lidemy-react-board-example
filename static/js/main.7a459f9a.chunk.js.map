{"version":3,"sources":["components/App/App.js","components/App/index.js","index.js"],"names":["Page","styled","div","Title","h1","MessageForm","form","MessageLable","MessageTextArea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","MessageBody","MessageDeleteButton","ErrorMessage","Message","message","handleDeleteMessage","id","nickname","Date","createdAt","toLocaleString","body","onClick","MESSAGE_API","App","console","log","useState","messages","setMessages","errorMessage","setErrorMessage","textAreaRef","useRef","getMessageAPI","fetch","then","resp","json","data","catch","err","toString","useLayoutEffect","method","headers","res","ok","Error","alert","onSubmit","e","preventDefault","current","value","JSON","stringify","ref","rows","length","style","marginTop","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a459f9a.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { useState, useEffect, useLayoutEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// contariner\nconst Page = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  font-family: \"monospace\", \"微軟正黑體\";\n  box-shadow: 0px 0px 16px rgb(199, 197, 197);\n  border-radius: 8px;\n  padding: 12px 28px;\n  padding-bottom: 24px;\n  color: #6c6c6c;\n  box-sizing: border-box;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n`;\n\n// 表單區塊 form\nconst MessageForm = styled.form`\n  margin-top: 16px;\n  font-size: 18px;\n`;\nconst MessageLable = styled.div``;\n\nconst MessageTextArea = styled.textarea`\n  display: block;\n  margin-top: 8px;\n  min-width: 95%;\n  max-width: 100%;\n  border-color: rgba(0, 0, 0, 0.125);\n`;\nconst SubmitButton = styled.button`\n  margin-top: 8px;\n  color: #ddd;\n  background-color: #343a40;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  font-size: 16px;\n  padding: 6px 12px;\n`;\n\n// 顯示留言區塊\nconst MessageList = styled.div`\n  margin-top: 16px;\n`;\nconst MessageContainer = styled.div`\n  border: 1px solid rgba(0, 0, 0, 0.125);\n  padding: 10px 16px;\n  border-radius: 4px;\n  & + & {\n    margin-top: 16px;\n  }\n`;\n\nconst MessageHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 16px;\n  padding-bottom: 5px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.125);\n`;\n\nconst MessageAuthor = styled.div`\n  margin-right: 12px;\n  color: #232323;\n  font-size: 20px;\n`;\n\nconst MessageTime = styled.div``;\n\nconst MessageBody = styled.div`\n  margin-top: 8px;\n  word-break: break-all;\n  white-space: pre-line;\n`;\n\nconst MessageDeleteButton = styled.button`\n  margin-top: 8px;\n  color: #fff;\n  background-color: #da1f1f;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  font-size: 14px;\n  padding: 3px 6px;\n  position: relative;\n  right: -95%;\n`;\n\nconst ErrorMessage = styled.div`\n  margin-top: 16px;\n  font-size: 20px;\n  color: red;\n`;\n\n// Message Component: 可從傳入的參數去思考架構\nfunction Message({ message, handleDeleteMessage }) {\n  if (!message) return null;\n  const handleDeleteClick = () => {\n    handleDeleteMessage(message.id);\n  };\n\n  return (\n    <MessageContainer data-id={message.id}>\n      <MessageHead>\n        <MessageAuthor>{message.nickname}</MessageAuthor>\n        <MessageTime>\n          {new Date(message.createdAt).toLocaleString()}\n        </MessageTime>\n      </MessageHead>\n      <MessageBody>{message.body}</MessageBody>\n      <MessageDeleteButton onClick={handleDeleteClick}>\n        刪除\n      </MessageDeleteButton>\n    </MessageContainer>\n  );\n}\n\nMessage.propTypes = {\n  message: PropTypes.shape({\n    id: PropTypes.number,\n    nickname: PropTypes.string,\n    body: PropTypes.string,\n    createdAt: PropTypes.number,\n  }),\n  handleDeleteMessage: PropTypes.func,\n};\n\nconst MESSAGE_API = \"https://student-json-api.lidemy.me/comments\";\n\nfunction App() {\n  console.log(\"render\");\n\n  /* lazy initializer\n  const [messages, setMessages] = useState(() => {\n    console.log(\"fetch\");\n    fetch(`${MESSAGE_API}?_limit=10&_sort=createdAt&_order=desc`)\n      .then((resp) => resp.json())\n      .then((data) => {\n        console.log(\"setData:\", data);\n        setMessages(data);\n      })\n      .catch((err) => {\n        console.log(\"setError\");\n        setErrorMessage(err.toString());\n      }));\n  });\n  const [errorMessage, setErrorMessage] = useState(null);\n  */\n\n  const [messages, setMessages] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const textAreaRef = useRef();\n\n  const getMessageAPI = () => {\n    console.log(\"fetch\");\n    return fetch(`${MESSAGE_API}?_limit=10&_sort=createdAt&_order=desc`)\n      .then((resp) => resp.json())\n      .then((data) => {\n        console.log(\"setData:\", data);\n        setMessages(data);\n      })\n      .catch((err) => {\n        console.log(\"setError\");\n        setErrorMessage(err.toString());\n      });\n  };\n\n  useLayoutEffect(() => {\n    getMessageAPI();\n  }, []);\n\n  const handleMessageSubmit = (e) => {\n    e.preventDefault();\n    const content = textAreaRef.current.value;\n    if (!content) {\n      return alert(`錯誤：留言不可為空白`);\n    }\n\n    fetch(`${MESSAGE_API}`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        nickname: \"Tequila\",\n        body: textAreaRef.current.value,\n      }),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res);\n        }\n        return res.json();\n      })\n      .then((data) => {\n        console.log(\"sendMessage success!\");\n        console.log(\"Resp Data:\", data);\n        if (data.ok === 0) {\n          return alert(`錯誤：留言送出失敗！\\nErr: ${data.message}`);\n        }\n        textAreaRef.current.value = \"\";\n        getMessageAPI();\n      })\n      .catch((err) => {\n        console.log(err);\n        return alert(`錯誤：伺服器錯誤！\\nErr: ${err.toString()}`);\n      });\n  };\n\n  const handleDeleteMessage = (id) => {\n    fetch(`${MESSAGE_API}/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(res);\n        }\n        return res.json();\n      })\n      .then((data) => {\n        console.log(\"Message Delete!\");\n        console.log(\"Resp Data:\", data);\n        if (data.ok === 0) {\n          return alert(`錯誤：留言刪除失敗！\\nErr: ${data.message}`);\n        }\n        getMessageAPI();\n      })\n      .catch((err) => {\n        return alert(`錯誤：伺服器錯誤！\\nErr: ${err.toString()}`);\n      });\n  };\n\n  return (\n    <Page>\n      <Title>React 留言板</Title>\n      <MessageForm onSubmit={handleMessageSubmit}>\n        <MessageLable>留言內容</MessageLable>\n        <MessageTextArea ref={textAreaRef} rows={8} />\n        <SubmitButton>送出</SubmitButton>\n      </MessageForm>\n      {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\n      {messages && messages.length === 0 && (\n        <div style={{ marginTop: \"16px\" }}>目前還沒有人留言喔～</div>\n      )}\n      <MessageList>\n        {messages &&\n          messages.map((message) => {\n            return (\n              <Message\n                key={message.id}\n                message={message}\n                handleDeleteMessage={handleDeleteMessage}\n              />\n            );\n          })}\n      </MessageList>\n    </Page>\n  );\n}\n\nexport default App;\n","import App from \"./App\";\nexport default App;\n\n// 也可以把兩行直接簡寫成一行\n// export { default } from \"./App\";\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}